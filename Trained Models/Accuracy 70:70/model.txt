model.add(Conv2D(64,(5,5), padding='same', activation='elu', input_shape=(48, 48,1)))
model.add(BatchNormalization())
model.add(Conv2D(64,(5,5), padding='same', activation='elu'))
model.add(BatchNormalization())
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(Dropout(0.4))

model.add(Conv2D(128,(3,3), padding='same', activation='elu'))
model.add(BatchNormalization())
model.add(Conv2D(128,(3,3), padding='same', activation='elu'))
model.add(BatchNormalization())
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(Dropout(0.4))

model.add(Conv2D(256,(3,3), padding='same', activation='elu'))
model.add(BatchNormalization())
model.add(Conv2D(256,(3,3), padding='same', activation='elu'))
model.add(BatchNormalization())
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(Dropout(0.5))

model.add(Flatten())

model.add(Dense(128, activation='elu'))
model.add(BatchNormalization())
model.add(Dropout(0.6))

model.add(Dense(7, activation='softmax'))

opt = Adam(0.001)
model.compile(optimizer=opt, loss='categorical_crossentropy', metrics=['accuracy'])